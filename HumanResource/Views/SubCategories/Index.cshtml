@model IEnumerable<HumanResource.Repository.SubCategories>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string ItemName = "SubCategoria";
    string ItemsName = "SubCategorias";
    string ItemNameConArticulo = "la SubCategoria";
}

<div class="header-page-title job-registration clearfix">
    <div class="title-overlay"></div>
    <div class="container">
        <h1>Administración</h1>

        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Home")">Inicio</a></li>
            <li class="active">Administración</li>
        </ol>

    </div> <!-- end .container -->

</div> <!-- end .header-page-title -->
<!-- Page Content -->

<div id="page-content" class="page-content pt60">
    <div class="container">
        <div class="row">
            <div class="col-sm-4 page-sidebar">
                @Html.Partial("_PartialAsideAdmin")
            </div> <!-- end .page-sidebar -->

            <div class="col-sm-8 page-content">

                <div id="page-wrapper">
                    <div class="row">
                        <div class="col-lg-12">
                            <h1 class="page-header">@ItemsName</h1>
                        </div>
                        <!-- /.col-lg-12 -->
                    </div>
                    <!-- /.row -->
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="panel panel-default">
                                <div class="panel-heading">

                                    <button type="button" id="btnNuevo" class="btn btn-primary" data-toggle="modal" data-target="#nuevoModal">
                                        Nuevo
                                    </button>
                                    <button type="button" id="btnEditar" class="btn btn-primary" data-toggle="modal" data-target="#editarModal">
                                        Editar
                                    </button>
                                    <button type="button" id="btnBorrar" class="btn btn-primary" data-toggle="modal" data-target="#borrarModal">
                                        Borrar
                                    </button>

                                </div>
                                <!-- /.panel-heading -->


                                <div class="panel-body">

                                    <table width="100%" class="table table-striped table-bordered table-hover" id="dataTables-Index">
                                        <thead>
                                            <tr>
                                                <th>ID</th>
                                                <th>Categoria</th>
                                                <th>SubCategoria</th>
                                            </tr>
                                        </thead>
                                    </table>
                                    <!-- /.table-responsive -->
                                </div>
                                <!-- /.panel-body -->
                            </div>
                            <!-- /.panel -->
                        </div>
                        <!-- /.col-lg-12 -->
                    </div>
                    <!-- /#row -->
                </div>

            </div> <!-- end .page-content -->
        </div>
    </div> <!-- end .container -->
</div> <!-- end #page-content -->
<!-- Modal -->

<div class="modal fade" id="nuevoModal" role="dialog">
    <div class="modal-dialog">
        <form id="form-create" method="post">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Nuevo</h4>
                </div>
                <div class="modal-body">
                    <form role="form">
                        <div class="form-group">
                            <label>Categoria</label>
                            @Html.DropDownList("selectCategoryCreate", new SelectList(ViewBag.listaCategorias, "Id", "Name"), new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label>SubCategoria</label>
                            <input id="input-Descripcion" name="inputDescripcion" class="form-control" autocomplete="off">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="editarModal" role="dialog">
    <div class="modal-dialog">
        <form id="form-edit" method="post">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Editar</h4>
                </div>
                <div class="modal-body">
                    <form role="form">

                        <div class="form-group">
                            <label>Id</label>
                            <input id="input-Id" name="inputId" class="form-control" disabled>
                        </div>


                        <div class="form-group">
                            <label>Categoria</label>
                            @Html.DropDownList("selectCategoryEdit", new SelectList(ViewBag.listaCategorias, "Id", "Name"), new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            <label>SubCategoria</label>
                            <input id="input-Descripcion" name="inputDescripcion" class="form-control" autocomplete="off">
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/Scripts/modalFunctions.js")

    <script>

    $(document).ready(function () {
        var itemNameConArticulo = '@ItemNameConArticulo';
        var itemName = '@ItemName';

        habilitaBotones(false);


        $('#dataTables-Index').DataTable({
              "ajax":
                  {
                      url: "@Url.Action("Gets")",
                      type: "post",
                      dataSrc: ""
                  },
           "columns": [
               { "data": "Id" },
               { "data": "Category.Name" }
               { "data": "Name" }
           ],
           responsive: true
       });

        $('#dataTables-Index tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
                habilitaBotones(false);
            }
            else {
                $('#dataTables-Index').DataTable().$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
                habilitaBotones(true);

            }
        });

    });







    function Delete()
    {
        $("#div-loader").show();

            //var id = $("#dataTables-Index").dataTable().$("tr.selected").attr('id');
            var id =$('#dataTables-Index').find('tr.selected>td').first().text();
            $.ajax({
                    url: '@Url.Action("Delete")',
                    type: 'POST',
                    data: JSON.stringify({
                        "id": id
                    }),
                    contentType: 'application/json; charset=utf-8;',
                    success: function (result) {
                        $("#dataTables-Index").dataTable().fnReloadAjax();
                        $("#div-loader").hide();
                        Lobibox.notify('success', {
                            title: 'Exito',
                            msg: 'Los cambios se han grabado correctamente.'
                        });
                        habilitaBotones(false);
                    },
                    error: function (response) {
                        $("#div-loader").hide();
                            Lobibox.notify('error', {
                                title: 'Error',
                                msg: 'Ah ocurrido un error, intente nuevamente.'
                            });
                    }
                });
    }

    $("#form-create").validate({
        rules: {
            inputDescripcion: { required: true, minlength: 2, maxlength: 64 },
            selectCategoryCreate: { required: true },
        },
        messages: {
            inputDescripcion: {
                required: "Este campo es requerido.",
                minlength: "Introduzca al menos 2 caracteres.",
                maxlength: "La longitud máxima permtida es de 64 caracteres."
            },
            selectCategoryCreate: {
                required: "Este campo es requerido."
            }
        },
        submitHandler: function (form) {
            $("#div-loader").show();
            var object = new Object();
            object.Name = $("#input-Descripcion").val();
            object.CategoryId = $("#selectCategoryCreate option:selected").val();
            var data = JSON.stringify(object);


            //Antes de editar, verifico que no este duplicando el Rol
            var isDuplicate = getDuplicates(0, object.Name, object.CategoryId);

            if (isDuplicate) {
                $("#div-loader").hide();
                Lobibox.notify('warning', {
                    title: 'Cuidado',
                    msg: 'Ya existe, debe asignar otro nombre.'
                });

                return;
            }


            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create")',
                    data: data,
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (dataResponse) {
                        $("#dataTables-Index").dataTable().fnReloadAjax();//Recargo la grilla
                        $('#nuevoModal').modal('hide');
                        $("#div-loader").hide();
                        if (dataResponse.responseCode == 0)
                            {
                            $("#div-loader").hide();
                            Lobibox.notify('success', {
                                title: 'Exito',
                                msg: 'Los cambios se han grabado correctamente.'
                            });
                        } else {
                                Lobibox.notify('error', {
                                    title: 'Error',
                                    msg: 'Ah ocurrido un error, intente nuevamente.'
                            });
                        }
                    },
                    error: function (response) {
                        $("#div-loader").hide();
                            Lobibox.notify('error', {
                                title: 'Error',
                                msg: 'Ah ocurrido un error, intente nuevamente.'
                            });
                    }
                });
            },
            errorElement: "p"
    });


    $("#form-edit").validate({
        rules: {
            inputDescripcion: { required: true, minlength: 2, maxlength: 64 },
            selectCategoryEdit: { required: true },
        },
        messages: {
            inputDescripcion: {
                required: "Este campo es requerido.",
                minlength: "Introduzca al menos 2 caracteres.",
                maxlength: "La longitud máxima permtida es de 64 caracteres."
            },
            selectCategoryEdit: {
                required: "Este campo es requerido."
            },
        },
        submitHandler: function (form) {
            $("#div-loader").show();

            var object = new Object();
            object.Id = $('#editarModal').find('input#input-Id').val();
            object.Name = $('#editarModal').find('input#input-Descripcion').val();
            object.CategoryId = $("#selectCategoryEdit option:selected").val();
            var data = JSON.stringify(object);

            //Antes de editar, verifico que no este duplicando el Rol
            var isDuplicate = getDuplicates(object.Id, object.Name, object.CategoryId);

            if (isDuplicate)
            {
                $("#div-loader").hide();
                Lobibox.notify('warning', {
                    title: 'Cuidado',
                    msg: itemNameConArticulo+ ' ya existe, debe asignar otro nombre.'
                });

                return;
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Edit")',
                    data: data,
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    success: function (dataResponse) {
                        $("#dataTables-Index").dataTable().fnReloadAjax();//Recargo la grilla
                        $('#editarModal').modal('hide');
                        $("#div-loader").hide();
                        if (dataResponse.responseCode == 0)
                            {
                            $("#div-loader").hide();
                            Lobibox.notify('success', {
                                title: 'Exito',
                                msg: 'Los cambios se han grabado correctamente.'
                            });
                        } else {
                                Lobibox.notify('error', {
                                    title: 'Error',
                                    msg: 'Ah ocurrido un error, intente nuevamente.'
                            });
                        }
                        habilitaBotones(false);
                    },
                    error: function (response) {
                        $("#div-loader").hide();
                            Lobibox.notify('error', {
                                title: 'Error',
                                msg: 'Ah ocurrido un error, intente nuevamente.'
                            });
                    }
                });
            },
            errorElement: "p"
    });


    //Completo el modal edit con los datos de la grilla
    $('#editarModal').on('shown.bs.modal', function (e) {
        var idTipo = $('#dataTables-Index').find('tr.selected>td').first().text();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("Get")',
            data: {
                id: idTipo
            },
            cache: false,
            success: function (result) {
                $('#editarModal').find('input#input-Id').val(result.Id);
                $('#editarModal').find('input#input-Descripcion').val(result.Name);
                $('#editarModal').find('#selectCountryEdit').val(result.Countries.Id);
                $('#editarModal').find('#selectCategoryEdit').val(result.Categories.Id);
            },
            error: function (response) {
                    Lobibox.notify('error', {
                        title: 'Error',
                        msg: 'Ah ocurrido un error, intente nuevamente.'
                });
                    $('#editarModal').modal('hide');
            }
        });


    });




    function getDuplicates(pid,pParam, pParam2)
    {
        var isDuplicate = false;
            $.ajax({
                type: 'GET',
                async: false ,
            url: '@Url.Action("GetDuplicates")',
            data: {
                id: pid,
                descripcion: pParam,
                categoriaId : pParam2
            },
            cache: false,
            success: function (result) {
                if (result.responseCode > 0)
                    isDuplicate= true;
                else
                    isDuplicate= false;
            }
        });

            return isDuplicate;
    }



    </script>
}

